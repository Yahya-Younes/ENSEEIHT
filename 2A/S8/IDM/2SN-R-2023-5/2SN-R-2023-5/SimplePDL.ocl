import 'SimplePDL.ecore'

package simplepdl

context Process
inv warningSeverity: false
inv withMessage('Explicit message in process ' + self.name + ' (withMessage)'): false
inv errorSeverity: null

context Process
inv validName('Invalid name: ' + self.name):
	self.name.matches('[A-Za-z_][A-Za-z0-9_]*')

context ProcessElement
def: process(): Process =
	Process.allInstances()
		->select(p | p.processElements->includes(self))
		->asSequence()->first()

context WorkSequence
inv successorAndPredecessorInSameProcess('Activities not in the same process : '
		+ self.predecessor.name + ' in ' + self.predecessor.process().name+ ' and '
		+ self.successor.name + ' in ' + self.successor.process().name
):
	self.process() = self.successor.process()
	and self.process() = self.predecessor.process()
	
-- deux sous-activités différentes d’un même processus ne peuvent pas avoir le même nom.
context WorkDefinition
inv uniqNames: self.Process.processElements->select(pe | pe.oclIsKindOf(WorkDefinition))
	->collect(pe | pe.oclAsType(WorkDefinition))
	->forAll(w | self = w or self.name <> w.name)
	
-- une dépendance ne peut pas être réflexive.
context WorkSequence	
inv notReflexive: self.predecessor <> self.successor

context WorkDefinition
-- le nom d’une activité doit être composé d’au moins deux caractères.
inv nameIsLongEnough('Name is too short: ' + self.name): self.name.size() >= 3
-- C5 : le nom d’une activité ne doit être composé que de lettres, chiffres ou soulignés, un chiffre ne peut pas être première position.
inv validWDName('Invalid WD name: ' + self.name):
	self.name.matches('[A-Za-z_][A-Za-z0-9_]+')
--le nombre de ressources utilisés doit etre positif
--context RessourceUtilise
--inv NumberUsedofRessourcePositive: self.occurenceutilise >=0 
-- le nombre de ressources totale doit etre positif
context Ressource
inv NumberofRessourcePositive: self.occurence >=0 

-- le nom d’une resource ne doit être composé que de lettres, chiffres ou soulignés, un chiffre ne peut pas être première position.
inv validResourceName('Invalid ResourceUsed name: ' + self.type):
	self.type.matches('[A-Za-z_][A-Za-z0-9_]+')

endpackage
